@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;
@use "../../base/breakpoints" as b;

.typing-field-wrapper {
  margin-top: calc(v.$elements-spacing * 2);
  padding: v.$elements-spacing;

  & input {
    background-color: inherit;
    color: var(--text-task-color);
    caret-color: c.$bright-blue;
    transition: v.$main-transition;

    &::placeholder {
      color: var(--text-task-complete-color);
    }
    &:focus::placeholder {
      color: transparent;
    }
  }

  &__text-input-wrapper {
    flex-grow: 1;

    & > input {
      width: 100%;
    }
  }

  .new-todo-input-text {
    border: none;
    outline: none;
    &::first-letter {
      text-transform: uppercase;
    }
  }
}

.list-summary {
  padding: 1em;
  @include flex(row, space-between, center);
  gap: v.$elements-spacing;
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-top: func.rem(1) solid var(--border-color);
  color: var(--informative-text);
  opacity: 0;
  visibility: hidden;
  animation: listSummaryShow v.$todoSummary-animation-time ease-in v.$todoList-animation-time
    forwards;

  & button {
    transition: v.$main-transition;
  }

  & button:where(:hover, :focus-visible) {
    color: var(--btn-light-hover);
  }
}

.reorder-text {
  margin-block-start: calc(v.$elements-spacing * 3);
  margin-block-end: calc(v.$elements-spacing * 2);
  text-align: center;
  color: var(--informative-text);
  opacity: 0;
  visibility: hidden;
  animation: listSummaryShow v.$todoSummary-animation-time ease-in
    calc(v.$todoList-animation-time + v.$todoSummary-animation-time) forwards;

  @media screen and (width <= b.$mobile) {
    margin-block-start: calc(v.$elements-spacing * 2);
  }
  @media screen and (width < func.em(550)) {
    margin-block-start: calc(v.$elements-spacing);
  }
}

@keyframes listSummaryShow {
  to {
    opacity: 1;
    visibility: visible;
  }
}
